-- MICROSOFT SQL SERVER ASSIGNMENT
		-- NAME : AGBAI EMMANUEL OKWARA
				-- QUANTUM ANALYTICS, MAY COHORTS


-- ASSIGNMENT 1. HOW MANY PEOPLE IN THE DB DO NOT HAVE A MIDDLE NAME? 

SELECT * FROM PERSON.PERSON;

-- ANSWER
SELECT MIDDLENAME, COUNT(BusinessEntityID) MIDNAME_COUNT FROM Person.Person
GROUP BY MiddleName
HAVING MiddleName IS NULL;



-- ASSIGNMENT 2. HOW MANY EMAIL ADDRESSES DO NOT END IN ADVENTURE-WORKS.COM?

SELECT * FROM Person.EmailAddress;

--ANSWER
SELECT COUNT(EMAILADDRESS) EMAIL_COUNT FROM Person.EmailAddress
WHERE EMAILADDRESS NOT LIKE '%ADVENTURE-WORKS.COM';



-- ASSIGNMENT 3. A CUSTOMER HAS CONCERNS WITH MARKET PENETERATION AND WOULD LIKE A REPORT ON WHAT STATES HAVE THE MOST SALES BETWEEN 
            --  2010-2011. PROVIDE THE DATA THAT THE CUSTOMER WOULD FIND MOST RELEVANT AND ADD ANY ADDITIONAL INFORMATION IF REQUIRED.

SELECT * FROM Sales.SalesTerritory;
SELECT DISTINCT NAME  FROM Person.StateProvince;
-- TERRITORYID, NAME
SELECT * FROM SALES.SalesOrderHeader;
-- ORDERDATE, TOTALDUE

-- ANSWER
SELECT  PSP.TerritoryID, NAME STATE, ORDERDATE, SUM(TOTALDUE) TOTAL_SALES FROM Person.StateProvince PSP
INNER JOIN SALES.SalesOrderHeader SOH
ON PSP.TerritoryID = SOH.TerritoryID
GROUP BY NAME, OrderDate, PSP.TerritoryID
HAVING OrderDate BETWEEN '2010-01-01' AND '2011-12-31'
ORDER BY TOTAL_SALES DESC;



-- ASSIGNMENT 4. A TICKET IS ESCALATED AND ASKS WHAT CUSTOMERS GOT THE EMAIL PROMOTION. PLEASE PROVIDE THE INFORMATION.

SELECT * FROM PERSON.Person;

-- ANSWER
SELECT FIRSTNAME, LastName, EmailPromotion FROM Person.Person
WHERE EmailPromotion != 0
ORDER BY EmailPromotion DESC;



-- ASSIGNMENT 5. RETRIEVE A LIST OF THE DIFFERENT TYPES OF CONTACTS AND HOW MANY OF THEM EXIST IN THE DATABASE. WE ARE ONLY
			--  INTERESTED IN CONTACTTYPES THAT HAVE 100 CONTACTS OR MORE.


SELECT * FROM PERSON.PersonPhone;
SELECT * FROM Person.PhoneNumberType;

-- ANSWER
SELECT NAME CONTACTTYPES, COUNT(PHONENUMBER) CONTACT_COUNT FROM Person.PersonPhone PPP
INNER JOIN Person.PhoneNumberType PNT
ON PPP.PhoneNumberTypeID = PNT.PhoneNumberTypeID
GROUP BY NAME
HAVING COUNT(PHONENUMBER) >=100;



-- ASSIGNMENT 6. RETRIEVE A LIST OF ALL CONTACTS WHICH ARE 'PURCHASING MANAGER' AND THEIR NAMES.

SELECT * FROM PERSON.ContactType;
SELECT * FROM Person.Person;
SELECT * FROM Person.BusinessEntityContact
WHERE ContactTypeID = 15;

-- ANSWER
SELECT PP.BUSINESSENTITYID, FIRSTNAME, LASTNAME FROM Person.Person PP
FULL JOIN PERSON.BusinessEntityContact
ON PP.BusinessEntityID = PERSONID
WHERE ContactTypeID = 15;



-- ASSIGNMENT 7. SHOW ORDERQTY, THE NAME AND THE LISTPRICE OF THE ORDER MADE BY CUSTOMERID 635.

SELECT * FROM SALES.SalesOrderDetail;
SELECT DISTINCT SalesOrderID FROM Sales.SalesOrderDetail;
SELECT * FROM Production.Product;
SELECT * FROM Sales.Customer
WHERE CustomerID = 635;

-- ANSWER
SELECT CUSTOMERID, NAME PRODUCTNAME, ORDERQTY, LISTPRICE FROM PRODUCTION.PRODUCT PP
INNER JOIN SALES.SalesOrderDetail SO
ON PP.ProductID = SO.ProductID
INNER JOIN Sales.Customer SC
ON StoreID = SalesOrderDetailID
WHERE CustomerID = 635;



-- ASSIGNMENT 8. A "SINGLE ITEM ORDER" IS A CUSTOMER ORDER WHERE ONLY ONE ITEM IS ORDERED. SHOW THE SALESORDERID AND THE UNITPRICE
			--   FOR EVERY SINGLE ITEM ORDER.

SELECT * FROM Sales.SalesOrderDetail;

--ANSWER
SELECT SALESORDERID, UNITPRICE FROM Sales.SalesOrderDetail
WHERE OrderQty = 1
ORDER BY UNITPRICE DESC;


-- ASSIGNMENT 9. WHERE DID THE RACING SOCKS GO? LIST THE PRODUCT NAME AND THE COMPANYNAME FOR ALL CUSTOMERS WHO ORDERED PRODUCTMODEL 'RACING SOCKS'.

SELECT * FROM Production.Product
WHERE NAME LIKE 'RACING SOCKS%';
SELECT * FROM Purchasing.Vendor;
SELECT * FROM Sales.SalesOrderDetail;
SELECT * FROM Sales.SalesOrderHeader;
SELECT * FROM Purchasing.ProductVendor;

-- ANSWER
SELECT PPV.PRODUCTID, CUSTOMERID, PP.NAME PRODUCTNAME, PV.NAME COMPANYNAME FROM SALES.SalesOrderHeader SOH
INNER JOIN Sales.SalesOrderDetail SOD
ON SOH.SalesOrderID = SOD.SalesOrderID
INNER JOIN Purchasing.ProductVendor PPV
ON SOD.ProductID = PPV.ProductID
INNER JOIN Purchasing.Vendor PV
ON PPV.BusinessEntityID = PV.BusinessEntityID
INNER JOIN Production.Product PP
ON SOD.ProductID = PP.ProductID
WHERE PP.NAME LIKE 'RACING SOCKS%';



-- ASSIGNMENT 10. HOW MANY PRODUCTS IN PRODUCTCATEGORY 'CRANKSETS' HAVE BEEN SOLD TO AN ADDRESS IN 'LONDON'?

SELECT * FROM Production.Product
WHERE ProductSubcategoryID = 8;
SELECT * FROM PRODUCTION.ProductSubcategory
WHERE NAME = 'CRANKSETS';
SELECT * FROM Person.Address
WHERE CITY = 'LONDON';
SELECT * FROM Sales.SalesOrderDetail
WHERE PRODUCTID BETWEEN 949 AND 951;
SELECT SalesOrderID, ShipToAddressID FROM SALES.SalesOrderHeader;

-- ANSWER
SELECT  PRODUCTID, SHIPTOADDRESSID, AddressLine1, CITY, COUNT(SOD.SALESORDERID) SALESORDER FROM SALES.SalesOrderDetail SOD
INNER JOIN SALES.SalesOrderHeader SOH
ON SOD.SalesOrderID = SOH.SalesOrderID
INNER JOIN Person.Address
ON ShipToAddressID = AddressID
GROUP BY ProductID, ShipToAddressID, AddressLine1, CITY
HAVING ProductID BETWEEN 949 AND 951 AND CITY = 'LONDON'
ORDER BY COUNT(SOD.SALESORDERID) DESC;

-- A TOTAL OF TEN(10) PRODUCTS IN PRODUCTCATEGORY 'CRANKSETS' HAVE BEEN SOLD TO AN ADDRESS IN 'LONDON'.


-- ASSIGNMENT 11. SHOW THE BEST-SELLING ITEM BY VALUE.

SELECT * FROM SALES.SalesOrderDetail;
--PRODUCTID, ORDERQTY, LINETOTAL
SELECT * FROM Production.Product;
--NAME

-- ANSWER
SELECT TOP 1 PP.PRODUCTID, NAME, ORDERQTY, LINETOTAL FROM Sales.SalesOrderDetail SSO
INNER JOIN Production.Product PP
ON PP.ProductID = SSO.ProductID
ORDER BY LineTotal DESC;

-- OR
SELECT TOP 1 PP.PRODUCTID, NAME, ORDERQTY, SUM(LINETOTAL) TOTALSALES FROM Sales.SalesOrderDetail SSO
INNER JOIN Production.Product PP
ON PP.ProductID = SSO.ProductID
GROUP BY PP.ProductID, NAME, OrderQty
ORDER BY TOTALSALES DESC;
